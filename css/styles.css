/*Custom propities*/
:root{
    --blanco:#ffffff;
    --oscuro:#212121;
    --primario: #FFC107;
    --secundario: #0097a7;
    --gris: #757575;
    --fuente-principal: 3.8rem;
}
/* Globales */
html{
    font-size: 62.5%;
    /* apply a natural box layout model to all elements, but allowing components to change */

    box-sizing: border-box; /*Para que solo te preocupes por el "height" y ya no poner padding, border y margin */
    scroll-snap-type: y mandatory; /*Para dar unefecto de scroll bonito en cada seccion y puse "y" porque es vertical el eje "y" si quisiera horizontal hubiera puesto "x" */
}
/**Scroll Snap**/
.servicios, .navegacion-principal, .formulario{ /*Esto es lo que puse en la etiqueta html en el CSS para que funcionara el scroll snap*/

    scroll-snap-align: center;
    scroll-snap-stop: always;
}


*, *:before, *:after { /*el  * significa que seleccione todos los elementos del HTML  */
    box-sizing: inherit;
  }

body{
    font-size: 16px;/* 1rem = 10px */
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, #DFE9FE 0%, var(--blanco) 100%); /*degradado fondo de abajo hacia arriba (to top). Luego el color, Luego eL 0% ES PORQUE QUIERO QUE INICIE DESDE ABAJO. Luego le voy a poner hacia que color va a ir *//*Imgina a los porcentajes como una altura de la pagina donde 0% es estar en el piso y 100% es estar en el techo miralo como alturas.*/
}
.contenedor{
    max-width: 120rem;   /*Toma 1200 pixeles como maximo y solamente si hay ese espacio disponible si no toma el 100% que es el ancho que toma un div*/
    margin: 0 auto;
    
    
}

.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}
@media (min-width: 768px ) {
    .boton{
        width: auto; /*Lo que hace el auto es que lo reseta el ancho*/
    }
}
.boton:hover{
    cursor: pointer;
}



.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
-moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
background-color: var(--blanco);
padding: 2em ;
border-radius: 1rem;
}








/* Tipografia */
/*id: -Se utiliza solo una vez*/
/*clases: Se puede utilizar las veces que quieras*/
h1 {
    font-size: 3.8rem;
}
h2 {
    font-size: 2.8rem;
}
h3 {
    font-size: 1.8rem;
}

h1,h2,h3 {
    text-align: center;
}

/* Titulos */

.titulo span{
    font-size: 2rem;
}

/**Utilidades**/
.w-sm-100{
    width: 100%;
}

@media (min-width: 768px) {
    .w-sm-100{
        width: auto;
    }
}

.flex{
    display: flex;
}
.alinear-derecha{
    justify-content: flex-end;
}


    
/* Navegación principal */
.nav-bg{
    background-color: var(--secundario);
}
 
.navegacion-principal{
    
    display: flex;
    flex-direction: column; 
    
   
}
@media (min-width: 480px) {
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;
    }

}

.navegacion-principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding:  1rem;
}

.navegacion-principal a:hover{  /*el hover sirve para dar ese efecto cuando pasamos el cursor en el navegador de que se pone de color amarillo*/
    background-color: var(--primario);
    color: var(--oscuro);
}

/* Hero */
.hero{
    background-image: url(../img/hero.jpg);/*con background-image: pondremos una imagen en css. Y le ponemos url que es una propiedad exclusiva de background-image para poder poner la dirección de la imagen*/
    background-repeat: no-repeat;/*Para que la imagen no se repita cuando reducimos el tamaño del navegador (google, firefox, etc)*/
    background-size: cover;/*background-size: sirve para ponerle un tamaño a la imagen*/
    height: 410px;
    position: relative; /*El pare debe tener posoción  "relative" y despues le pongo al hijo posición absoluta */
    margin-bottom: 2rem;
} 

.contenido-hero{
    position: absolute;
    background-color: red;
  background-color: rgba(0,0,0,.6); /*el cuarto digito sirve para poder darle las tonanilidades*//*anterior*/
  background-color: rgb(0 0 0 / 60% );
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;/*Sirve para alinear horizontalmente cuando el flex-direction es column*/
   justify-content: center;/*Sirve para alinear verticalmente cuando el flex-direction es row*/
}
.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.contenido-hero .ubicacion{
    display: flex;
    align-items: flex-end;  
}







@media (min-width: 768px) {
    .servicios{
        display: grid; /*Agrega las propiedades de CSS grid*/
        /*grid-template-columns: 300px 300px; /*La primera column mide 300px y el segundo tambien*/
       /* grid-template-rows: 200px 800px;/*La primera es cuanto medira la parte superior y la segunda es cuanto medira la parte inferior.*/
        /*grid:200px 800px / 300px 300px;   /*La primera parte son las filas y despues del "/" la segunda parte son las columnas. Esto lo podemos hacer para ya no poner  "grid-template-rows:" y "grid-template-columns:" */
        grid-template-columns: repeat(3,1fr); /*3 columnas que ocuparan el mismo espacio tambien podimos usar "1fr 1fr 1fr" para dividirlo como fracción O "33.3% 33.3% 33.3% O "repeat(3, 1fr) y que el primer parametro son las veces que se repitira el segundo parametro"*/
        column-gap: 1rem;/*separacion entre las columnas*/

    }
}

.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;

}
.servicio h3{
    color: var(--secundario);
    font-weight: 400;
}
.servicio p{
    line-height: 2;
    text-align: center;
}
.servicio .iconos{
   height: 15rem;
   width: 15rem;
   background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}


.formulario{
background-color: var(--gris);
width: min(60rem, 100%); /*Recibe 2 parametros y utiliza el valor más pequeño entre 60rem O el 100%*/
margin: 0 auto; /*Con esto lo centramos.*/
padding: 2rem;
border-radius: 1rem;
}

.formulario fieldset
{
    
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario)
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: 50% 50%;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    .campo:nth-child(3), .campo:nth-child(4)  {
        grid-column: 1 / 3 ; /*que vaya de la columna 1 a la 3. Nos ayudamos con FireFox developer edition en esto está en el capitulo 48*/
    } /*Si hay 3 etiquetas con la clase campo, podemos usar nth.child(nº de orden) en donde el numero de orden es que si quiero editar la primera etiqueta con la clase campo, entonces pongo "1", pero si quiero editar la segunda etiqueta con la clase campo, entonces pongo "2". Recuerda que inicia desde 1*/
}

.campo{
    margin-bottom: 1rem;
    
}

.campo label{

    color: var(--blanco);
    font-weight: 700;
    margin-bottom: .5 rem;
    display: block;
}

.campo textarea{

    height: 20rem;
}


.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: 1.5rem;
}

/*footer*/
.footer{
    text-align: center;

}

